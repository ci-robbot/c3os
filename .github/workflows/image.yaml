name: Build image

on: 
 push:
 pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
       include:
         - flavor: "opensuse"
         - flavor: "fedora"
         - flavor: "ubuntu"
         - flavor: "alpine"
    steps:
      - uses: actions/checkout@v2
      - run: |
          git fetch --prune --unshallow
      - name: setup-docker
        uses: docker-practice/actions-setup-docker@master
      - name: Release space from worker
        run: |
          sudo rm -rf /usr/local/lib/android # will release about 10 GB if you don't need Android
          sudo rm -rf /usr/share/dotnet # will release about 20GB if you don't need .NET
      - name: Login to Quay Registry
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}
        run: echo ${{ secrets.QUAY_PASSWORD }} | docker login -u ${{ secrets.QUAY_USERNAME }} --password-stdin quay.io
      - name: Build  ðŸ”§
        env:
          FLAVOR: ${{ matrix.flavor }}
          IMAGE: quay.io/c3os/c3os:${{ matrix.flavor }}-latest
        run: |
          bash build.sh
      - uses: actions/upload-artifact@v2
        with:
          name: c3os-${{ matrix.flavor }}.iso.zip
          path: |
            *.iso
            *.sha256
          if-no-files-found: error
      - name: Push to quay
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}
        run: | 
          docker push quay.io/c3os/c3os:${{ matrix.flavor }}-latest

# Test start
  build-vm-images:
    needs: build
    runs-on: macos-10.15
    strategy:
      fail-fast: false
      matrix:
       include:
         - flavor: "opensuse"
         - flavor: "alpine"
#         - flavor: "ubuntu"
         - flavor: "fedora"
    steps:
      - uses: actions/checkout@v2
      - name: Install deps
        run: |
          brew install hudochenkov/sshpass/sshpass
          brew install qemu
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: c3os-${{ matrix.flavor }}.iso.zip
      - run: |
              ls -liah
              iso=$(ls *.iso)
              sh build_vm.sh $iso
      - uses: actions/upload-artifact@v2
        with:
          name: c3os-${{ matrix.flavor }}.qcow2.tar.xz
          path: |
            *.qcow2.tar.xz
      - uses: actions/upload-artifact@v2
        with:
          name: c3os-${{ matrix.flavor }}.ova
          path: |
            *.ova
          if-no-files-found: error

  prepare-test:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: |
          git fetch --prune --unshallow
      - name: Install Go
        uses: actions/setup-go@v2
        with:
            go-version: '^1.16'
      - name: Prepare config
        run: |
              go build -o c3os ./cli
              ./c3os create-config > config.yaml
              cat tests/assets/config.yaml >> config.yaml
      - name: Enable dns
        uses: mikefarah/yq@master
        with:
          cmd: yq -i '.c3os.dns = true' 'config.yaml'
      - name: Show config
        run: |
              cat config.yaml
      - uses: actions/upload-artifact@v2
        with:
          name: config.yaml
          path: |
             config.yaml
          if-no-files-found: error

  test:
    needs: prepare-test
    runs-on: macos-10.15
    strategy:
      fail-fast: true
      matrix:
       include:
         - flavor: "opensuse"
           node: "A" # Arbitrary field
         - flavor: "opensuse"
           node: "B"
#         - flavor: "alpine"
#           node: "C"
    steps:
      - uses: actions/checkout@v2
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: c3os-${{ matrix.flavor }}.iso.zip
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: config.yaml
      - name: Install deps
        run: |
          brew install cdrtools jq
      - name: Install Go
        uses: actions/setup-go@v2
        with:
            go-version: '^1.16'
      - run: |
              ls -liah
              export ISO=$PWD/$(ls *.iso)
              export GOPATH="/Users/runner/go"
              PATH=$PATH:$GOPATH/bin
              go get github.com/onsi/ginkgo/v2
              go get github.com/onsi/gomega/...
              go get github.com/onsi/ginkgo/v2/ginkgo/internal@v2.1.3
              go install github.com/onsi/ginkgo/v2/ginkgo
              CLOUD_INIT=$PWD/config.yaml CREATE_VM=true FLAVOR=${{ matrix.flavor }} ginkgo --fail-fast -r ./tests/
      - uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: ${{ matrix.flavor }}-vbox.logs.zip
          path: tests/**/logs/*
          if-no-files-found: warn

  prepare-test-alpine:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: |
          git fetch --prune --unshallow
      - name: Install Go
        uses: actions/setup-go@v2
        with:
            go-version: '^1.16'
      - name: Prepare config
        run: |
              go build -o c3os ./cli
              ./c3os create-config > config.yaml
              cat tests/assets/config.yaml >> config.yaml
      - name: Enable dns
        uses: mikefarah/yq@master
        with:
          cmd: yq -i '.c3os.dns = true' 'config.yaml'
      - name: Set
        uses: mikefarah/yq@master
        with:
          cmd: yq -i '.vpn.EDGEVPNLEDGERINTERVAL = 30' 'config.yaml'
      - name: Set
        uses: mikefarah/yq@master
        with:
          cmd: yq -i '.vpn.EDGEVPNLEDGERSYNCINTERVAL = 45' 'config.yaml'
      - name: Set
        uses: mikefarah/yq@master
        with:
          cmd: yq -i '.vpn.EDGEVPNLOGLEVEL = "debug"' 'config.yaml'
      - name: Show config
        run: |
              cat config.yaml
      - uses: actions/upload-artifact@v2
        with:
          name: config.yaml
          path: |
             config.yaml
          if-no-files-found: error

  test-alpine:
    needs: prepare-test-alpine
    runs-on: macos-10.15
    strategy:
      fail-fast: true
      matrix:
       include:
         - flavor: "alpine"
           node: "A" # Arbitrary field
         - flavor: "alpine"
           node: "B"
         - flavor: "alpine"
           node: "C"
    steps:
      - uses: actions/checkout@v2
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: c3os-${{ matrix.flavor }}.iso.zip
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: config.yaml
      - name: Install deps
        run: |
          brew install cdrtools jq
      - name: Install Go
        uses: actions/setup-go@v2
        with:
            go-version: '^1.16'
      - run: |
              ls -liah
              export ISO=$PWD/$(ls *.iso)
              export GOPATH="/Users/runner/go"
              PATH=$PATH:$GOPATH/bin
              go get github.com/onsi/ginkgo/v2
              go get github.com/onsi/gomega/...
              go get github.com/onsi/ginkgo/v2/ginkgo/internal@v2.1.3
              go install github.com/onsi/ginkgo/v2/ginkgo
              CLOUD_INIT=$PWD/config.yaml CREATE_VM=true FLAVOR=${{ matrix.flavor }} ginkgo --fail-fast -r ./tests/
      - uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: ${{ matrix.flavor }}-vbox.logs.zip
          path: tests/**/logs/*
          if-no-files-found: warn