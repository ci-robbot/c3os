---
name: 'Build arm images'

on:
  push:
    branches:
      - master
      - arm
    tags:
      - '*'

jobs:
  docker:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - flavor: "opensuse-arm-rpi"
            dockerfile: "Dockerfile.opensuse-arm-rpi"
            platforms: "linux/arm64"
            model: rpi64
          - flavor: "alpine-arm-rpi"
            dockerfile: "Dockerfile.alpine-arm-rpi"
            platforms: "linux/arm64"
            model: rpi64
    steps:
      - uses: actions/checkout@v2
      - run: |
          git fetch --prune --unshallow
      - name: Prepare
        id: prep
        run: |
          DOCKER_IMAGE=quay.io/c3os/c3os
          VERSION=latest
          SHORTREF=${GITHUB_SHA::8}
          # If this is git tag, use the tag name as a docker tag
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${{ matrix.flavor }}-${GITHUB_REF#refs/tags/}
          fi
          TAGS="${DOCKER_IMAGE}:${{ matrix.flavor }}-${VERSION},${DOCKER_IMAGE}:${{ matrix.flavor }}-${SHORTREF}"
          # If the VERSION looks like a version number, assume that
          # this is the most recent version of the image and also
          # tag it 'latest'.
          if [[ $VERSION =~ ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]; then
            TAGS="$TAGS,${DOCKER_IMAGE}:${{ matrix.flavor }}-latest"
          fi
          # Set output parameters.
          echo ::set-output name=tags::${TAGS}
          echo ::set-output name=docker_image::${DOCKER_IMAGE}
          echo ::set-output name=current::${DOCKER_IMAGE}:${{ matrix.flavor }}-${SHORTREF}
      - name: OS versions
        id: versions
        run: |
          TAG=${GITHUB_REF##*/}
          ISO=c3os-${{ matrix.flavor }}-$TAG
          IMAGE=quay.io/c3os/c3os:${{ matrix.flavor }}-$TAG
          FLAVOR=${{ matrix.flavor }}
          set +e
          source versions.sh
          # Set output parameters.
          echo ::set-output name=c3os_version::${C3OS_VERSION}
          echo ::set-output name=k3s_version::${K3S_VERSION}
          echo ::set-output name=luet_version::${LUET_VERSION}
          echo ::set-output name=os_label::${OS_LABEL}
          echo ::set-output name=os_name::${OS_NAME}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@master
        with:
          platforms: all

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@master

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_PASSWORD }}
      - name: Build
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: ./
          file: ./images/${{ matrix.dockerfile }}
          platforms: ${{ matrix.platforms }}
          build-args: |
            C3OS_VERSION=${{ steps.versions.outputs.c3os_version }}
            K3S_VERSION=${{ steps.versions.outputs.k3s_version }}
            LUET_VERSION=${{ steps.versions.outputs.luet_version }}
            OS_LABEL=${{ steps.versions.outputs.os_label }}
            OS_NAME=${{ steps.versions.outputs.os_name }}
          push: true
          tags: ${{ steps.prep.outputs.tags }}
      - name: Export version
        run: |
             TAG=${GITHUB_REF##*/}
             echo "VERSION=$TAG" >> $GITHUB_ENV
      - name: Build Image
        id: build_image
        run: |
          git clone https://github.com/rancher-sandbox/cOS-toolkit
          curl -LO https://github.com/rancher-sandbox/elemental/releases/download/v0.0.13/elemental-v0.0.13-Linux-x86_64.tar.gz
          tar -xvf elemental-v0.0.13-Linux-x86_64.tar.gz
          sudo cp elemental /usr/bin/elemental
          curl https://luet.io/install.sh | sudo sh
          pushd cOS-toolkit
          mkdir build
          sudo ./images/arm-img-builder.sh --model ${{ matrix.model }} --docker-image ${{ steps.prep.outputs.current }} build/c3os-${{ matrix.flavor }}-$VERSION.img
          sudo mv build ../
          popd
      - name: Upload Image
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          sudo tar cvf build.tar build
          sudo luet util pack quay.io/c3os/c3os:${{ matrix.flavor }}-$VERSION.img build.tar image.tar
          sudo -E docker load -i image.tar
          sudo -E docker push quay.io/c3os/c3os:${{ matrix.flavor }}-$VERSION.img
      - name: Upload results
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.flavor }}-image
          path: build
          if-no-files-found: error
      - name: "Release"
        if: startsWith(github.ref, 'refs/tags/')
        uses: fnkr/github-action-ghr@v1
        env:
          GHR_COMPRESS: xz
          GHR_PATH: build/
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
